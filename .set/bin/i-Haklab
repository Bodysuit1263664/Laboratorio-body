#!/usr/bin/bash
#Created on Dec/2018 and upgraded on Ago/2021 by @Ivam3
IFS=$'\n\t'
trap ctrl_c 2
source $PREFIX/share/i-Haklab/.set/var/variables
source $iHAKLAB/.set/functions/functions
ctrl_c(){ printf "$Y\n\n\t\t   [¿] Need a help [?]$B\n\t\tTelegram : t.me/Ivam3_Bot$W\n\n";exit;}
chk-iHaklab
chk-Cuser
[ $# -eq 0 ] && { printf >&2 "$R(_>)─➤$W missing argument, type $(basename $0) -h for help";exit;}
STDERR(){ printf "$R(_>)─➤$W missing argument, type $(basename $0) -h for help";exit;}
clear;banner
case "$1" in
	-h|help)
		Menu
		;;
	-v|version)
		printf "$G(_>)─➤$W i-Haklab $(grep -om 1 "v.*.*" $iHAKLAB/README.md|awk '{print $1}') 2021 by Ivam3 - It is a hacking laboratory that contains open source tools recommended by Ivam3."
		;;
	about)
		[[ -e $iHAKLAB/.set/libexec/Tools/Readme/$2 ]] && cat $iHAKLAB/.set/libexec/Tools/Readme/$2 || STDERR
		;;
	install|remove)
		if [[ $2 ]];then
			for i in ${@:2};do
				bash $iHAKLAB/.set/share/$1 $i
			done
		else
			STDERR
		fi
		;;
	restore)
		printf "$Y(_>)─➤$W Restoring (It could take a while)..";
		rm -rf $iHAKLAB
		git clone --quiet https://github.com/Ivam3/i-Haklab.git $iHAKLAB
		if [[ -d $iHAKLAB ]];then
			printf "$G. DONE!!$W\n"
		else
			printf "$R\n(_>)─➤ ERR_restore";ctrl_c
		fi
		;;
	reinstall)
		[[ -e $iHAKLAB/setup ]] || { printf >&2 "$R\n(_>)─➤ Fatal error\n$Y(_>)─➤ please run$G i-Haklab restore$Y and try again$W\n";exit;}
		cd $iHAKLAB;bash setup
		;;
	root)
		command -v sudo >/dev/null || wget -q $iHDB/bin/sudo -O $PREFIX/bin/sudo
		exec sudo root
		;;
	show)
		[[ $2 ]] && bash $iHAKLAB/.set/share/$1 ${@:2} || STDERR
		;;
	speedtest)
		command -v python >/dev/null || yes|apt install python >/dev/null 2>&1
		command -v speedtest-cli >/dev/null || python -m pip install --no-color --quiet --no-cache-dir speedtest-cli
		printf "$Y(_>)─➤$W Running speed test.\n"
		speedtest-cli
		;;
	update)
		TMP_FILE1=$(mktemp)
		wget -q $iHDB/share/upgrade -O $TMP_FILE1
		RMONTH=$(grep "Modify" $TMP_FILE1 | cut -d "-" -f2)
		RDAY=$(grep "Modify" $TMP_FILE1 | cut -d "-" -f3)
		LMONTH=$(stat $iHAKLAB | grep Modify | awk '{print $2}' | cut -d "-" -f2)
		LDAY=$(stat $iHAKLAB | grep Modify | awk '{print $2}' | cut -d "-" -f3)
		Done(){ printf "$G\n(_>)─>$W Already up to date$G <-(<_)$W\n";}
		if [ $LMONTH -eq $RMONTH ];then
			if [ $LDAY -gt $RDAY ];then
				Done
			else
				printf "$Y(_>)─➤$W Upgrading (It could take a while)...\n"
				bash $TMP_FILE1
				Done
			fi
		elif [ $LMONTH -gt $RMONTH ]; then
			Done
		else
			printf "$Y(_>)─➤$W Upgrading (It could take a while)...\n"
			bash $TMP_FILE1
			Done
		fi
		rm $TMP_FILE1
		;;
	weechat)
		[[ -e $PREFIX/bin/weechat ]] || yes|apt install weechat
		printf "$Y\n   (_>)─>$W After start weechat type the next commands$Y <─(<_)$Y\n/server add freenode chat.freenode.net/6697 -ssl -autoconnect\n    /set irc.server.freenode.autojoin #Ivam3byCinderella\n                   /connect freenode\n                  /nick your-nickname\n               /join #Ivam3byCinderella$G\n               $R(w)-> USE SOME VPN <-(w)$G\n\n                 Press enter to start$W\n"
		read enter;weechat;k-boom
		;;
#:::AUTOMATED COMMAND:::#
	bf|forwarding)
		bash $iHAKLAB/.set/share/$1 ${@}
		;;
	payapk|payexe|paypdf|shodan)
		if [ -z $2 ] || [ $2 -a "$3" -eq "$3" ] 2>/dev/null
		then
			bash $iHAKLAB/.set/share/msf ${@}
		else
			STDERR
		fi
		;;
	share|Esmsg)
		[[ $2 ]] && bash $iHAKLAB/.set/share/$1 ${@:2} || STDERR
		;;
	*)
		STDERR
		;;
esac
