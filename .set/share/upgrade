#!/data/data/com.termux/files/usr/bin/bash
#i-Haklab v.3.0 2021 by Ivam3 - Is a hacking laboratory that contains open source tools recommended by Ivam3.
#Created on Jan/2019 
#Modify: 2022-01-13
####################
IFS=$'\n\t'
trap ctrl_c 2
R='\033[1;31m'
G='\033[1;32m'
Goke='\033[92m'
Glig=='\e[1;32m'
Y='\033[1;33m'
B='\033[1;34m'
M='\033[1;35m'
C='\033[1;36m'
W='\033[0m'
ctrl_c() { printf "$Y\t\t   [¿] Need a help [?]$B\n\t\tTelegram : t.me/Ivam3_Bot$W\n";}
microSD=$(df|tail -n 2|awk -F " " '{print $6}'|grep -iv "emulated")
oldIH=$(grep "iHAKLAB" $PREFIX/etc/fish/config.fish|awk -F " " '{print $3}')

#TRASH
printf "$Y(_>)─➤$W Dropping the trash\n"
sleep 0.5
[[ -e $PREFIX/libexec/colors ]] && rm -f $PREFIX/libexec/colors
for del in DoS-A-Tool Ivam3 RuGiR;do
	[[ -e $PREFIX/bin/$del ]] && rm -rf $PREFIX/bin/$del
done
[[ -d ~/java ]] && rm -rf ~/java
[[ -d ~/localtunnel-server ]] && rm -rf ~/localtunnel-server
[[ -d $PREFIX/bin/aiochk ]] && rm -rf $PREFIX/bin/aiochk
if [[ -d ~/storage/external-1/roothome ]];then
	mv ~/storage/external-1/roothome ~/storage/external-1/tools
else
	[[ -d $PREFIX/share/tools ]] || mkdir $PREFIX/share/tools
	for i in $(cat $PREFIX/share/i-Haklab/.set/libexec/Tools/listoftools) rhawk Pybelt IPGeoLocation Hunner HatCloud AndroBugs;do
		[[ -d ~/$i ]] && mv ~/$i $PREFIX/share/tools
	done
fi

#UPGRADING
if $(bash $PREFIX/libexec/banner/wall-banner|grep -oE "v_2.0");then
	rm -rf $oldIH
	git clone --quiet https://github.com/ivam3/i-Haklab.git ~/i-Haklab
	cd ~/i-Haklab;chmod +x setup;bash setup
else
	printf "$Y(_>)─➤$W Upgrading i-Haklab directory (it could take a while).\n"
	rm -rf $iHAKLAB
	git clone --quiet https://github.com/ivam3/i-Haklab.git $iHAKLAB
	wget -q $iHDB/functions/functions -O $iHAKLAB/.set/functions/functions
	wget -q $iHDB/var/variables -O $iHAKLAB/.set/var/variables
	source $PREFIX/share/i-Haklab/.set/var/variables
	source $iHAKLAB/.set/functions/functions

	#UPGRADE OMF
	printf "$Y(_>)─➤$W Upgrading i-Haklab shell\n";sleep 0.
#	[[ -d ~/.local/share/omf ]] && rm -rf ~/.local/share/omf
#	[[ -d ~/.config/omf ]] && rm -rf ~/.config/omf/
#	git config --global core.autocrlf
#	printf "$Y\n(_>)─➤ Now you will see a PS1 as '⋊> ~/i-Haklab on master ⨯'\n ╰─➤ when it happen hold on for one minute and then type exit to continue$W\n"
#	curl -Ls $iHDB/to-install/get.oh-my.fish|fish >/dev/null 2>/dev/null &

	cat <<- CONF >> $PREFIX/etc/fish/config.fish
# Put system-wide fish configuration entries here
# or in .fish files in conf.d/
# Files in conf.d can be overridden by the user
# by files with the same name in /fish/conf.d
# This file is run by all fish instances.
# To include configuration only for login shells, use
# if status --is-login
#    ...
# end
# To include configuration only for interactive shells, use
# if status --is-interactive
#   ...
# end
if status --is-login
bash /data/data/com.termux/files/usr/libexec/banner/wall-banner
end

function on_exit --on-event fish_exit
echo 'Have a nice hacking day!!'
sleep 1
end

set fish_theme bira
set -g theme_nerd_fonts yes
set DISPLAY localhost:0
set HOME /data/data/com.termux/files/home
set GOPATH /data/data/com.termux/files/home/go
set GOROOT /data/data/com.termux/files/usr/lib/go
set LD_LIBRARY_PATH /data/data/com.termux/files/usr/lib
set JAVA_HOME /data/data/com.termux/files/usr/opt/openjdk
set iHAKLAB /data/data/com.termux/files/usr/share/i-Haklab
set TOOLS $TOOLS
alias LOCALHOST="ifconfig 2>/dev/null|grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}'|grep -v 255|grep -v 127|tail -n 1"
alias serverapache="apachectl"
alias postgresql="pg_ctl -D /data/data/com.termux/files/usr/var/lib/postgresql"
alias traductor="gawk -f (curl -Ls git.io/translate | psub) -- -shell"
CONF
	TMP_fish=$(mktemp)
	cat <<- CONF > $TMP_fish
#!/bin/env fish
omf install bira
CONF
	fish $TMP_fish >/dev/null 2>&1

#FIX SOME BUGS
	printf "$Y(_>)─➤$W Re-configurating. . .\n";sleep 0.5
	wget -q $iHDB/login-files/i-haklab_login -O $PREFIX/var/log/login-termux
	wget -q $iHDB/libexec/banner/i-Haklab -O $PREFIX/libexec/banner/login-banner

######### Upgrading executables #########
	BINDIR=$(ls $iHAKLAB/.set/bin)
	printf "$Y(_>)─➤$W Upgrading commands. . .$W\na"
	for i in ${BINDIR[*]}; do
		wget -q $iHDB/bin/$i -O $PREFIX/bin/$i
		chmod +x $PREFIX/bin/$i
	done

	printf "$G(_>)─➤$W Setting i-Haklab style.\n"
	[[ -d ~/.termux ]] || mkdir -p ~/.termux
	for i in $(ls $iHAKLAB/.set/to-install/.termux);do
		wget -q --tries=20 $iHDB/to-install/$i -O ~/.termux/$i
	done
	[[ -e ~/.termux/shell ]] || ln -s $PREFIX/bin/fish ~/.termux/shell

	printf "$G(_>)─➤$W Installing VIM predictable text.\n"
	[[ -d ~/.vim ]] && rm -rf ~/.vim
	wget -q --tries=20 ${iHDB}/to-install/iHaklabvim.zip -O $TMPDIR/iHaklabvim.zip
	unzip -q $TMPDIR/iHaklabvim.zip -d $TMPDIR
	rm -rf $TMPDIR/iHaklabvim.zip
	mv $TMPDIR/iHaklabvim/vim ~/.vim
	mv $TMPDIR/iHaklabvim/.vimrc ~/
	rm -rf $TMPDIR/iHaklabvim
	printf "$Y(_>)─➤ ALERT!!\n ╰───➤$W Before to use VIM open it and type:$G :PlugUpdate$Y\n ╰───➤$W To update all the new features.$Y\n ╰───➤$W press$G enter$W to continue\n"
	read enter
fi

bash $PREFIX/libexec/banner/wall-banner
printf "$G
(_>)─➤$W i-Haklab upgraded at version 3.0$G
 ╰─────$Y~☆ New features:$G
 ╰──────────$Y~☆$W code cleaner that optimizes the use of RAM$G
 ╰──────────$Y~☆$W obsolete tools removed$G
 ╰──────────$Y~☆$W list all installed tools with i-Haklab+show+listalltools$G
 ╰──────────$Y~☆$W common wordlist for brute force attacks added$G
 ╰──────────$Y~☆$W IbyC-fixer + RuGiR updated to fix possible issues$G
 ╰──────────$Y~☆$W vim predictable text$G
 ╰──────────$Y~☆$W code server for a best programer enviroment$G
 ╰──────────$Y~☆$W easy execution of fake root as command 'sudo'$G
 ╰──────────$Y~☆$W enable and desable login access with i-Haklab+install/remove$G
 ╰──────────$Y~☆$W install/remove more than 1 tool at the same time $G
 ╰──────────$Y~☆$W java 8 added$G
 ╰──────────$Y~☆$W verbosity applied at remove to deleting all dependencies too$G
 ╰──────────$Y~☆$W ngrok,ngrok.io and pagekite server added$G
 ╰──────────$Y~☆$W all abhacker repositories added$G
 ╰──────────$Y~☆$W metasploit easy and fast installation$G
 ╰──────────$Y~☆$W graphical environment with Termux:wayland or VNC-app$G
 ╰──────────$Y~☆$W automated installation and configuration x11-pkg$G
 ╰──────────$Y~☆$W wireshark xhydra and vim editor on graphical enviroment$G
 |
 ╰───────────➤$W to report issues goin to$B https://t.me/Ivam3_Bot."
#       i-Haklab by @Ivam3
