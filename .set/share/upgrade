#!/data/data/com.termux/files/usr/bin/bash
#i-Haklab v.3.1 2022 by Ivam3 - Is a hacking laboratory that contains open source tools recommended by Ivam3.
#Created on Jan/2019 
#Modify: 2022-03-22
####################
IFS=$'\n\t'
trap ctrl_c 2
s5=$(sleep 0.5)
binTools=$(ls $HOME/.local/share/i-Haklab/.set/bin)
ctrl_c() { printf "$Y\t\t   [¿] Need a help [?]$B\n\t\tTelegram : t.me/Ivam3_Bot$W\n";}

yes|apt install bat ncurses-utils locate &>/dev/null 2>>$LOGFILE
printf "$Y(_➤)$W Removing oldest i-Haklab version\n";$s5
[[ -e $PREFIX/etc/apt/sources.list.d/abhacker.repo.list ]] && rm -rf $PREFIX/etc/apt/sources.list.d/abhacker.repo.list
[[ -d $PREFIX/libexec/banner ]] && rm -rf $PREFIX/libexec/banner
[[ -e $PREFIX/var/log/login-termux ]] && rm $PREFIX/var/log/login-termux

printf "$green(_➤)$W Installing newest i-Haklab version\n"
git clone --quiet https://github.com/ivam3/i-Haklab.git $HOME/.local/share/iHaklab
[[ -d $HOME/.local/share/iHaklab ]] && rm -rf $HOME/.local/share/i-Haklab;mv ~/.local/share/iHaklab ~/.local/share/i-Haklab || { printf "$R(_➤)$W i-Haklab directory missing..$R Aborting.$W";exit;}

#::::: BUILD TREE DIRECTORIES
printf "$green(_➤)$W Creating the directories tree.\n"
mkdir -p ~/.local/{bin,etc/i-Haklab,etc/fish,lib,share,tools,var/service/www}

#::::: SET FUNC AND VAR :::::#
printf "$green(_➤)$W Setting variables, functions and binaries.\n"
source $HOME/.local/share/i-Haklab/.set/var/variables
source $iHAKLAB/.set/functions/functions
chmod 750 -R $iHAKLAB
fun=$(ls $iHAKLAB/.set/functions/*.fish|awk -F "/" '{print $NF}')
for f in ${fun[*]};do
	[[ -d $HOME/.config/fish/functions ]] || mkdir -p $HOME/.config/fish/functions
	if [[ ! -h $HOME/.config/fish/functions/$f ]];then
		ln -s $iHAKLAB/.set/functions/$f $HOME/.config/fish/functions/ 2>>$LOGFILE
	fi
done

#::::: SET BINARIES AND EXECUTABLE FILES
for b in $(ls $iHAKLAB/.set/bin);do
	if [[ ! -h $iHAKLAB/.set/bin/$b ]];then
		ln -s $iHAKLAB/.set/bin/$b $HOME/.local/bin/ 2>>$LOGFILE
	fi
done
chmod 750 $iHAKLAB/.set/bin/*

#::::: RELOCATE LOGIN ACCESS KEYS
printf "$green(_➤)$W Setting the i-Haklab access key.\n"
for i in Quiz Cinderella Ivam3;do
	[[ -e $PREFIX/libexec/termux/.$i ]] && mv $PREFIX/libexec/termux/.$i $HOME/.local/etc/i-Haklab
done
command -v pulseaudio >/dev/null || yes|apt install pulseaudio

#::::: SET i-HAKLAB STARTUP
printf "$green(_➤)$W Reconfigure startup settings\n";$s5
for motd in $(ls $PREFIX/etc/|grep "motd");do
	rm $PREFIX/etc/$motd
done
[[ -e $PREFIX/etc/fish/config.fish ]] && rm $PREFIX/etc/fish/config.fish
mkdir -p $PREFIX/etc/fish 2>>$LOGFILE
cat <<- CONF > $HOME/.local/etc/fish/config.fish
if status --is-login
bash /data/data/com.termux/files/home/.local/etc/i-Haklab/wall-banner
end

function on_exit --on-event fish_exit
echo 'Have a nice hacking day!!'
sleep 1
end

set fish_theme bira
set -g theme_nerd_fonts yes
set DISPLAY :0
set PULSE_SERVER 127.0.0.1
set PATH $HOME/.local/bin:$PREFIX/bin
set HOME /data/data/com.termux/files/home
set GOPATH /data/data/com.termux/files/home/go
set GOROOT /data/data/com.termux/files/usr/lib/go
set JAVA_HOME /data/data/com.termux/files/usr/opt/openjdk
set iHAKLAB /data/data/com.termux/files/home/.local/share/i-Haklab
set LD_LIBRARY_PATH $HOME/.local/lib:$PREFIX/lib
set TOOLS $TOOLS
alias bat="bat -f --theme 'Visual Studio Dark+'"
pulseaudio --start --exit-idle-time=-1 2>/dev/null
pacmd load-module module-native-protocol-tcp auth-ip-acl=127.0.0.1 auth-anonymous=1
CONF
ln -s $HOME/.local/etc/fish/config.fish $PREFIX/etc/fish

cat <<- CONF > $HOME/.bashrc
export PATH=$HOME/.local/bin:$PREFIX/bin
export LD_LIBRARY_PATH=$HOME/.local/lib:$PREFIX/lib
if [[ -e $PREFIX/bin/fish ]]
then
	if [[ ! \$(grep -oE "i-Haklab" $PREFIX/etc/fish/config.fish >/dev/null) ]] && [[ ! -h $PREFIX/etc/fish/config.fish ]]
	then
		rm $PREFIX/etc/fish/config.fish
		ln -s $HOME/.local/etc/fish/config.fish $PREFIX/etc/fish/config.fish
  fi
  [[ -d ~/.local/share/i-Haklab ]] || { printf >&2 "[+] i-Haklab main directory missing, restoring (It could take a while)...\\n";yes|apt install git;mkdir -p $HOME/.local/share 2>/dev/null;git clone --quiet https://github.com/ivam3/i-Haklab $HOME/.local/share/i-Haklab && chmod +x -R $HOME/.local/share/i-Haklab;}
  chsh -s fish
else
	yes|apt install fish &>/dev/null 2>/dev/null
  exec $HOME/.bashrc
fi
CONF

printf "$green(_➤)$W Setting i-Haklab style.\n";$s5
[[ -d ~/.termux ]] || mkdir -p ~/.termux
for i in $(ls $iHAKLAB/.set/to-install/.termux);do
	wget -q --tries=20 $iHDB/to-install/.termux/$i -O ~/.termux/$i
done
[[ -e ~/.termux/shell ]] || ln -s $PREFIX/bin/fish ~/.termux/shell

#::::: EET NANO AND VIM TEXT EDITORS
printf "$green(_➤)$W Installing NANO and VIM predictable text.\n";$s5
cat <<- CONF > $HOME/.nanorc
set linenumbers
set historylog
set tabsize 4
set autoindent
set mouse
set titlecolor white,gray
set statuscolor white,red
set keycolor white,gray
set functioncolor green
set numbercolor white,gray
set softwrap
set softwrap
#set nohelp
CONF

[[ -d ~/.vim ]] && rm -rf ~/.vim
wget -q --tries=20 ${iHDB}/to-install/iHaklabvim.zip -O $TMPDIR/iHaklabvim.zip
unzip -q $TMPDIR/iHaklabvim.zip -d $TMPDIR
if [[ -d $TMPDIR/iHaklabvim ]];then
	mv $(find $TMPDIR/iHaklabvim -type d -iname "vim") ~/.vim
	mv $(find $TMPDIR/iHaklabvim/ -type f -iname ".vimrc") ~/
else
	printf "$R(_➤) ERROR while setup vim editor$W"
fi
rm -rf $TMPDIR/iHaklabvim.zip
rm -rf $TMPDIR/iHaklabvim
printf "$Y(_➤)$W Press$green ENTER$W to continue.\n"
vim +PlugUpdate +x +x 2>/dev/null

#::::: INSTALL OMF
if [[ ! -d $HOME/.local/share/omf ]];then
	printf "$Y\n(_➤) Now you will see a PS1 as '⋊> ~/i-Haklab on master ⨯'\n ╰─➤ when it happen hold on for one minute and then type exit to continue$W\n"
	curl -Ls $iHDB/to-install/get.oh-my.fish|fish 2>>$LOGFILE
	TMP_fish=$(mktemp)
	cat <<- CONF > $TMP_fish
#!/bin/env fish
omf install bira
CONF
	fish $TMP_fish 2>>$LOGFILE
fi

cd;tput init
bash $HOME/.local/etc/i-Haklab/wall-banner
printf "$G
(_➤)$W i-Haklab upgraded at version 3.1$G
 ╰─────$Y~☆ New features:$G
 ╰──────────$Y~☆$W code cleaner that optimizes the use of RAM$G
 ╰──────────$Y~☆$W obsolete tools removed$G
 ╰──────────$Y~☆$W list all installed tools with i-Haklab+show+listalltools$G
 ╰──────────$Y~☆$W common wordlist for brute force attacks added$G
 ╰──────────$Y~☆$W IbyC-fixer + RuGiR updated to fix possible issues$G
 ╰──────────$Y~☆$W vim predictable text$G
 ╰──────────$Y~☆$W code server for a best programer enviroment$G
 ╰──────────$Y~☆$W easy execution of fake root as command 'sudo'$G
 ╰──────────$Y~☆$W enable and desable login access with i-Haklab+install/remove$G
 ╰──────────$Y~☆$W install/remove more than 1 tool at the same time $G
 ╰──────────$Y~☆$W java 17 added$G
 ╰──────────$Y~☆$W verbosity applied at remove to deleting all dependencies too$G
 ╰──────────$Y~☆$W ngrok,ngrok.io,ngrokSSH and pagekite server added$G
 ╰──────────$Y~☆$W command ngroklink added$G
 ╰──────────$Y~☆$W metasploit easy and fast installation$G
 ╰──────────$Y~☆$W graphical environment with Termux:wayland or VNC-app$G
 ╰──────────$Y~☆$W automated installation and configuration x11-pkg$G
 ╰──────────$Y~☆$W wireshark xhydra vscode and vim editor on graphical enviroment$G
 |
 ╰───────────➤$W to report issues goin to$B https://t.me/Ivam3_Bot."

updatedb;killall $(echo $SHELL|awk -F "/" '{print $NF}')
#       i-Haklab by @Ivam3
