#!/data/data/com.termux/files/usr/bin/bash
#Created on Dec/2018
IFS=$'\n\t'
trap ctrl_c 2
source /data/data/com.termux/files/usr/libexec/colors

function ctrl_c() {
                echo
                printf "$Y\n\n[!]$R Going me on$B Telegram$R t.me/Ivam3byCinderella$W\n\n"
}
if [ ! -d ~/storage ]; then
        termux-setup-storage
fi
if [ -L ~/storage/external-1 ]; then
	iHAKLAB=/data/data/com.termux/files/home/storage/external-1/roothome/i-Haklab
else
        iHAKLAB=/data/data/com.termux/files/home/i-Haklab
fi

while [ ! $(id -u) -ne 0 ]; do
	printf "$R\n[W]:-> You need to be a common user$W\n"
	exit
done
until [ -d $iHAKLAB ]; do
	printf "$R\n[W]:-> i-Haklab needed$W |$Y Do you wanna install it?$W\n"
	while read -p "[yes/no]:-> " yesorno && [ -z $yesorno ]; do
		continue
	done
if [ $yesorno = "yes" ] || [ $yesorno = "Yes" ] || [ $yesorno = "YES" ]; then
	git clone https://github.com/ivam3/i-Haklab.git $HOME/i-Haklab
        cd ~/i-Haklab;bash setup-lite
else 
	printf "$G[!]-> Have a nice hacking day!!\n"
	exit
fi
done

echo $(clear)
for i in  ------------------@ IVAM3-------------@ IVAM3-by----------@ IVAM3-by-CINDERELLA; do
        printf "$(clear) $C STARTING TO INSTALL BEEF. . . .$i"
        printf "\n\n"
        sleep 1
done
#INSTALLATION
fixbigdecimal() {
        printf "$G\n[+]-> FIXING BIG DECIMAL ISSUES$W\n"
	GEMS=$(ls $PREFIX/lib/ruby |grep -m 1 '[0-9].[0-9].[0-9]')
        apt install -yq patchelf
        for i in aarch64-linux-android arm-linux-androideabi \
                i686-linux-android x86_64-linux-android; do
                        if [ -e "$PREFIX/lib/ruby/$GEMS/${i}/bigdecimal.so" ]; then
                                if [ -n "$(patchelf --print-needed "$PREFIX/lib/ruby/$GEMS/${i}/bigdecimal/util.so" | grep bigdecimal.so)" ]; then
                                        exit 0
                                fi
                                patchelf --add-needed \
                                        "$PREFIX/lib/ruby/$GEMS/${i}/bigdecimal.so" \
                                        "$PREFIX/lib/ruby/$GEMS/${i}/bigdecimal/util.so"
                        fi
        done
}
printf "$G\n[+]-> UPGRADING TERMUX$W\n"
pkg update -y;pkg upgrade -y
printf "$G\n[+]-> INSTALLING ALL PACKAGES NEEDED$W\n"
pkg install -y ruby nodejs #dirmngr -y
printf "$G\n[+]-> DOWNLOADING BEEF PROJECT$W\n"
git clone https://github.com/beefproject/beef.git $PREFIX/opt/beef >/dev/null 2>&1
#
if [ -d $PREFIX/opt/beef ]; then
        cd $PREFIX/opt/beef
else
        printf "$R\n[ERR-DIR]-> SOMETHING WAS WRONG | TRY AGAIN.$W\n"
        exit
fi
printf "$G\n[+]-> ADAPTING BEEF PROJECT$W\n"
sed 's|database: "/opt/GeoIP/GeoLite2-City.mmdb"|database: "/data/data/com.termux/files/usr/opt/GeoIP/GeoLite2-City.mmdb\" |g' -i config.yaml
sed 's|passwd: "beef"|passwd: "Ivam3byCinderella"|g' -i config.yaml
gem update --system
gem install bundler
bundle install
fixbigdecimal
cp $PREFIX/opt/beef/README.md $iHAKLAB/.set/libexec/Readme/beef
printf "$G\n[+]-> CREATING BEEF COMMAND$W\n"
curl https://raw.githubusercontent.com/ivam3/i-Haklab/master/.set/bin/beef -o $PREFIX/bin/beef
wget https://github.com/ivam3/i-Haklab/raw/master/.set/to-install/GeoLite2-City_20200331.tar.gz -O $PREFIX/opt/beef/GeoLite2-City_20200331.tar.gz
if [ -e $PREFIX/opt/beef/GeoLite2-City_20200331.tar.gz ]; then
	gunzip GeoLite2-City_20200331.tar.gz
	if [ -e $PREFIX/opt/beef/GeoLite2-City_20200331.tar ]; then
		tar xvf GeoLite2-City_20200331.tar
		rm -rf GeoLite2-City_20200331.tar
		if [ ! -d $PREFIX/opt/GeoIP ]; then
			mkdir -p $PREFIX/opt/GeoIP
		fi
		if [ -d $PREFIX/opt/beef/GeoLite2-City_20200331 ]; then
			mv GeoLite2-City_20200331/* $PREFIX/opt/GeoIP
			rm -rf GeoLite2-City_20200331
		fi
	fi
else
	printf "$R\n[w]-> Data base can't be created$W\n"
	exit
fi
chmod 711 $PREFIX/bin/beef

#ENDING SCRIPT
printf "$Y\n[!]-> ::::::::::::::: DONE !! :::::::::::::::: <-[!]$G\n\tTo fix issues going to$B t.me/Ivam3_Bot$W\n"
#                                               @Ivam3
