#!/data/data/com.termux/files/usr/bin/bash
#Created on Dec/2018
IFS=$'\n\t'
trap ctrl_c 2
source /data/data/com.termux/files/usr/libexec/colors

function ctrl_c() {
                echo
                printf "$Y\n\n[!]$R Going me on$B Telegram$R t.me/Ivam3byCinderella$W\n\n"
}
if [ ! -d ~/storage ]; then
        termux-setup-storage
fi
if [ -L ~/storage/external-1 ]; then
	if [ -d ~/i-Haklab ]; then
		mkdir -p /data/data/com.termux/files/home/storage/external-1/roothome/
		mv /data/data/com.termux/files/home/i-Haklab /data/data/com.termux/files/home/storage/external-1/roothome/
#	else
#		printf "$R\n[W]:-> ERROR CODE :$E 48263\n"
#		exit
	fi
	iHAKLAB=/data/data/com.termux/files/home/storage/external-1/roothome/i-Haklab
else
        iHAKLAB=/data/data/com.termux/files/home/i-Haklab
fi

while [ ! $(id -u) -ne 0 ]; do
	printf "$R\n[W]:-> You need to be a common user$W\n"
	exit
done
until [ -d $iHAKLAB ]; do
	printf "$R\n[W]:-> i-Haklab needed$W |$Y Do you wanna install it?$W\n"
	while read -p "[yes/no]:-> " yesorno && [ -z $yesorno ]; do
		continue
	done
if [ $yesorno = "yes" ] || [ $yesorno = "Yes" ] || [ $yesorno = "YES" ]; then
	git clone https://github.com/ivam3/i-Haklab.git $HOME/i-Haklab
        cd ~/i-Haklab;bash setup
else 
	printf "$G[!]-> Have a nice hacking day!!\n"
	exit
fi
done

echo $(clear)
for i in  ------------------@ IVAM3-------------@ IVAM3-by----------@ IVAM3-by-CINDERELLA; do
        printf "$(clear) $C STARTING TO INSTALL SUDO COMMAND. . . .$i"
        printf "\n\n"
        sleep 1
done
CHECKROOT=$(bash $iHAKLAB/.set/to-install/check-root)
#INSTALLATION
if [ ! -d $HOME/.suroot ]; then
	mkdir $HOME/.suroot
	touch $HOME/.suroot/.bashrc
fi
if [ "$CHECKROOT" = "root" ]; then
        #set colored=true to turn on colored error messages
        #set colored=false to turn off colored error messages
        colored=true
        #red=1 green=2 yellow=3
        color() {
                if [ $colored == "true" ]; then
                        echo "$(tput setaf $1)${*:2}$(tput sgr0)"
                else
                        echo "${*:2}"
                fi
        }
        SYSBIN=/system/bin
        SYSXBIN=/system/xbin
        BB=$SYSXBIN/busybox
        PRE=/data/data/com.termux/files
        ROOT_HOME=$PRE/home/.suroot
        BINPRE=$PRE/usr/bin
        LDLP="export LD_LIBRARY_PATH=$PRE/usr/lib"
        CMDLINE="PATH=$PATH:$SYSXBIN:$SYSBIN;$LDLP;HOME=$ROOT_HOME;cd $PWD"

        if [ -x $SYSXBIN/su ]; then
                SU=$SYSXBIN/su
        elif [ -x /su/bin/su ]; then
                SU=/su/bin/su
        elif [ -x /sbin/su ]; then
                SU=/sbin/su
        fi
        if [ ! -d $ROOT_HOME ]; then
                if [ -x $BB ] && [ $($BB --list | grep -w mount) == "mount" ]; then
                        MOUNTEX="$BB mount"
                elif [ -x $SYSBIN/mount ]; then
                        MOUNTEX="$SYSBIN/mount"
                fi
                MOUNT_RW="$MOUNTEX -o rw,remount,rw /system"
                MOUNT_RO="$MOUNTEX -o ro,remount,ro /system"
                $SU -c "$MOUNT_RW"
                $SU -c "mkdir $ROOT_HOME"
                $SU -c "chmod 700 $ROOT_HOME"
                BASHRC="'PS1=\"# \"\nexport TERM=$TERM\n$LDLP\nexport PATH=$PATH:$SYSXBIN:$SYSBIN'"
                $SU -c "echo -e $BASHRC > $ROOT_HOME/.bashrc"
                $SU -c "chmod 700 $ROOT_HOME/.bashrc"
                $SU -c "$MOUNT_RO"
        fi
        # Reset echo
        stty sane
        if [ -e $PREFIX/bin/applets/sudo ]; then
                rm $PREFIX/bin/applets/sudo
        fi
        wget https://raw.githubusercontent.com/ivam3/ivam3.github.io/master/master/mediafire/sudo -O $PREFIX/bin/sudo
        chmod +x $PREFIX/bin/applets/sudo
        sudo echo "HOME=/data/data/com.termux/files/home/storage/external-1/roothome" >> ~/.suroot/.bashrc
else
        printf "$R[W]:-> DEVICE NOT ROOTED$W\n\n"
fi

#ENDING SCRIPT
printf "$Y\n[!]-> ::::::::::::::: DONE !! :::::::::::::::: <-[!]$G\n\tTo fix issues going to$B t.me/Ivam3_Bot$W\n"
#                                               @Ivam3
