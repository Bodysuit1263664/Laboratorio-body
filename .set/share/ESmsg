#!/bin/bash
#This file is part of i-Haklab command
source $PREFIX/share/i-Haklab/.set/var/variables
source $iHAKLAB/.set/functions/functions
STDERR(){ printf "$R(_>)─➤$W missing argument, type i-Haklab -h for help";exit;}
chk-snow
if [ $1 = "encode" ]; then
	while read -p "(_>)_message_or_file─➤ " msg && [ -z "$msg" ]; do
                continue
        done
	while read -p "(_>)_file_to_encode─➤ " file2encode && [ -z $file2encode ]; do
                continue
        done
	while read -p "(_>)_encoded_name_of_file─➤ " encodedfile && [ -z $encodedfile ]; do
                continue
        done
	read -p "(_>)_password_{empty=none}─➤ " passwd
        if [ -e "$msg" ] && [ -z passwd ];then
                $(which snow) -C -f $msg $file2encode $encodedfile
        elif [ -e "$msg" ] && [ ! -z passwd ];then
                $(which snow) -C -p "$passwd" -f $msg $file2encode $encodedfile
        elif [ ! -z $passwd ];then
                $(which snow) -C -p "$passwd" -m "$msg" $file2encode $encodedfile
        else
                $(which snow) -C -m "$msg" $file2encode $encodedfile
        fi
elif [ $1 = "decode" ]; then
	while read -p "(_>)_file_to_decode─➤ " file2decode && [ -z $file2decode ]; do
		continue
	done
	read -p "(_>)_password_{empty=none}─➤ " passwd
        if [ ! -z $passwd ]; then
                $(which snow) -C -p "$passwd" $file2decode
        else
                $(which snow) -C $file2decode
        fi
else
	STDERR
fi
