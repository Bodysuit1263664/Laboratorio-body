#!/data/data/com.termux/files/usr/bin/bash
#CREADED ON Dec/2018 BY @IVAM3
#UPGRADED ON 2021/Feb/19

IFS=$'\n\t'
trap ctrl_c 2
command -v curl >/dev/null 2>&1 || pkg install curl -y >/dev/null 2>&1

iHDB="https://raw.githubusercontent.com/ivam3/i-Haklab/master/.set"
IbyCDB="https://raw.githubusercontent.com/ivam3/ivam3.github.io/master/master/installer"
FILE=$(mktemp)
R='\033[1;31m'
G='\033[1;32m'
Goke='\033[92m'
Glig=='\e[1;32m'
Y='\033[1;33m'
B='\033[1;34m'
M='\033[1;35m'
C='\033[1;36m'
W='\033[0m'

ctrl_c(){ printf "$Y\n   [¿] Need a help [?]$B\nTelegram : t.me/Ivam3_Bot$W\n";}
Chao-chao(){ printf "$Y\n[!]-> ::::::::::::::: DONE !! :::::::::::::::: <-[!]$G\n\tTo fix issues going to$B t.me/Ivam3_Bot$W\n";}
Repos() {
	printf "$Y\n[!]─➤ Installing|upgrading repositories ...\n$W"
	command -v $Py > /dev/null 2>&1 || pkg install $Py -y > /dev/null 2>&1
	$Py -m pip install --upgrade pip > /dev/null 2>&1
	}
Lib() {
	for Libs in clang libtool libmpc libmpc-static libmpfr libmpfr-static libxml2 libxml2-static libxml2-utils libxslt libxslt-static libsodium libsodium-static tar wget; do
		SCHLIB=$(pkg list-installed | awk '{print $1}' | grep -oE $Libs | head -n1)
		if [ -z $SCHLIB ]; then
			printf "$Y\n[!]─➤ Installing libreries ...\n$W"
			pkg install $Libs -y > /dev/null 2>&1
		fi
	done
	}	
Turtle() {
	DIR=$(mktemp -d)
        wget $iHDB/fix-tools/py_modules/turtle-0.0.2.tar.gz -O $DIR/turtle-0.0.2.tar.gz -q
        if [ $DIR/turtle-0.0.2.tar.gz ]; then
                pushd $DIR
                gunzip $DIR/turtle-0.0.2.tar.gz
                if [ $DIR/turtle-0.0.2.tar ]; then
                        tar -xvf turtle-0.0.2.tar
                        if [ -d $DIR/turtle-0.0.2 ]; then
                                sed 's|      except ValueError, ve:|      except (ValueError, ve):|g' -i $DIR/turtle-0.0.2/setup.py
				$Py -m pip install -e turtle-0.0.2
                        fi
                fi
                popd
        fi
        rm -rf $DIR
	}
Menu() {
	printf $B"[USAGE-01]─➤ To fix python modules:$G\nIbyC-fixer <[B|BASIC] [L|LDFLAGS] [S|SODIUM]> <[Py|Py2]> <[file.txt|module(max 3)]>$W\n\nB  BASIC\tInstall module on basic\nL  LDFLAGS\tForce installation to use libraries and system compiler\nS  SODIUM\tForce the installation to use the sodium decryptor\nPy  \t\tFor python3\nPy2  \t\tFor python2\n\nExamples:\n\tIbyC-fixer BASIC Py future\n\tIbyC-fixer S Py2 colorama\n"
	printf "$B\n[USAGE-02]─➤ To fix an specific issue:$G\nIbyC-fixer <[nrauf|metasploit|RuGiR]> <option>$W\n\nnrauf       dir/to/app\tTo remapping unicode filenames to ascii when produced by apktool\nmetasploit\t\tTo fix metasploit instalation\nRuGiR\t\t\tTo fix ruby gems issues\n\nExamples:\n\tIbyC-fixer RuGiR\n\tIbyC-fixer nrauf \$HOME/original\n\nFor more help join to$B https://t.me/Ivam3_Bot$W\n\n"
	exit
	}
Chck() {
	for list in ${@:2} ; do
		MODULE=$(python -m pip list | awk '{print $1}' | grep $list)
		if [ ! -z $MODULE ]; then
			printf "$Y\n[!]─➤ Module $MODULE is already exist for $Py\n$W"
		fi
	done

	}
Args(){
if [ "$2" = 'Py' ]; then
	Py=python
	Repos
	Lib
elif [ "$2" = "Py2" ]; then
	Py=python2
	Repos
	Lib
else
	Menu
fi
}

while [ ! $(id -u) -ne 0 ]; do
	printf "$R\n[W]─➤ You need to be a common user$W\n"
	exit
done
until [ "$(basename "$0")" = "IbyC-fixer" ]; do
	printf "$R\n[W]─➤ Wrong file name$Y | "
        sleep 1
        printf "fixing it";sleep 2
        printf ".";sleep 0.7
        printf "..";sleep 0.5
        printf "...";sleep 0.2
        mv $PWD/$(basename "$0") $PREFIX/bin/IbyC-fixer >/dev/null 2>&1
        printf "$G DONE!!$W\n";sleep 1
        exit
done
until [ -e $PREFIX/bin/IbyC-fixer ]; do
	if [ ! -e $PREFIX/bin/IbyC-fixer ] && [ -e $PWD/IbyC-fixer ]; then
		mv $PWD/IbyC-fixer $PREFIX/bin/IbyC-fixer > /dev/null 2>&1
		printf "$Y[!]─➤ IbyC-fixer was add to PATH$W\n"
		sleep 1.5
	else
		printf "$R[W]─➤ You should add IbyC-fixer to PATH$W\n"
		exit
	fi
done

declare -a INSTADATE=($(ls -l $PREFIX/bin/IbyC-fixer|awk -F " " '{print $6,$7}') $(curl -Ls $iHDB/bin/IbyC-fixer|grep "UPGRADED"|awk -F "/" '{print $2,$3}'))
printf "$Y[!]─➤$W Looking for updates..";
sleep 1
if [ "${INSTADATE[0]}" != "${INSTADATE[2]}" ] || [ "${INSTADATE[1]}" -lt "${INSTADATE[3]}" ];then
        printf "$Y.Upgrading";
        sleep 2
	wget -q $iHDB/bin/IbyC-fixer -O $PREFIX/bin/IbyC-fixer
        printf "$G..DONE!!$W"
        sleep 1
else
        echo "$G.UPDATED$W"
        sleep 1
fi

clear;curl -Ls "${iHDB}/libexec/banner/Ivam3"|bash
while [ -z $1 ]; do
	Menu
done

case $1 in
	B|BASIC)
		Args
		for module in ${@:3} ; do
			Chck
			if [ $module = turtle ]; then
				Turtle
			elif [ -e $module ]; then
				$Py -m pip install -r $module
			else
				$Py -m pip install $module
			fi
		done
		Chao-chao
		;;
	LDFLAGS|L)
		Args
		export LDFLAGS="-L/system/lib/ -lm -lcompiler_rt"
		for module in ${@:3} ; do
			Chck
			if [ $module = turtle ]; then
				Turtle
			elif [ -e $module ]; then
				$Py -m pip install -r $module --global-option="build_ext" --global-option="--disable-jpeg"
			else
				$Py -m pip install $module --global-option="build_ext" --global-option="--disable-jpeg"
			fi
		done
		Chao-chao
		;;
	SODIUM|S)
		Args
		export SODIUM_INSTALL=system
		for module in ${@:3} ; do
			Chck
			if [ $module = turtle ]; then
				Turtle
			elif [ -e $module ]; then
				$Py -m pip install --no-binary :all: -r $module
			else
				$Py -m pip install --no-binary :all: $module
			fi
		done
		Chao-chao
		;;
	nrauf)
		if [ $2 ];then
			wget $iHDB/fix-tools/nrauf -O $FILE -q
			chmod +x $FILE
			exec $FILE $2
			rm -rf $FILE
		else
			printf "$R\n[ERR]─➤$W Apk file unallocated\n"
		fi
		;;
	metasploit)
		wget -q "${iHDB}/fix-tools/fixmetasploit" -O $FILE
		chmod +x $FILE
		exec $FILE --install ruby=2.7.2 -r apt install metasploit -y
		rm $FILE
		;;
	RuGiR)
		curl -Ls "${iHDB}/fix-tools/RuGiR"|bash
		;;
	*)
		ctrl_c
		exit
		;;
esac

#                                               @Ivam3
