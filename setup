#!/data/data/com.termux/files/usr/bin/bash
#This script will install i-Haklab v.3.0 2021 by Ivam3 - It is a hacking laboratory that contains open source tools recommended by Ivam3.
IFS=$'\n\t'
trap ctrl_c 2
ctrl_c() { printf "$Y\n\n   [¿] Need a help [?]$B\nTelegram : t.me/Ivam3_Bot$W\n\n";}
while [ ! -d ~/i-Haklab ] && [ $PWD != ~/i-Haklab ];do
	printf "$R\n(_>)─➤$W i-Haklab must to be in HOME path.\n"
	ctrl_c;exit
done
printf "Running...";sleep 0.5
[[ -d $PREFIX/share/i-Haklab ]] && rm -rf $PREFIX/share/i-Haklab
[[ -d ~/java ]] && rm -rf ~/java
cp -r ~/i-Haklab $PREFIX/share
source $PREFIX/share/i-Haklab/.set/var/variables
source $iHAKLAB/.set/functions/functions
chk-Cuser
clear;banner;sleep 0.5
${which} mkdir -p ~/.termux && echo "extra-keys = [['ESC','/','-','HOME','UP','END','PGUP'],['TAB','CTRL','ALT','LEFT','DOWN','RIGHT','PGDN']]" > ~/.termux/termux.properties && echo "$rst"

if [ -d ~/.local ]; then
	rm -rf ~/.local
fi
if [ -d ~/.config/fish ]; then
	rm -rf ~/.config/fish
fi
if command -v fish >/dev/null;then yes|apt remove fish && apt autoremove; fi

printf "$Y\n(_>)─➤$W Head to app configuration and provides storage permissions to termux.$Y\n ╰─➤$W when finished$G press enter\n$W"
read enter

#::::::::::Installation of dependencies::::::::::::#
printf "$G(_>)─➤$W Upgrading and installing Termux packages.\n"
yes|pkg update && pkg upgrade
apt list|awk -F "/" '{print $1}' > $TMPDIR/alltools.tmp
pkg list-installed|awk -F "/" '{print $1}' > $TMPDIR/installed.tmp
for repo in fish root-repo unstable-repo fortune util-linux coreutils vim python python2 ruby perl clang curl wget gawk make openssl openssl-tool php zip unzip tar w3m neofetch weechat irssi tor torsocks proxychains-ng htop bison megatools findutils git apr apr-util openssh apache2 mariadb php-apache pkg-config termux-api termux-tools termux-tools ncurses-utils ncurses postgresql termux-elf-cleaner cmatrix figlet man termux-api axel fortune apksigner autoconf libffi libgmp libpcap readline libsqlite nmap libgrpc libiconv libcaca libtool libmpc libmpc-static libmpfr libmpfr-static libxml2 libxml2-static libxml2-utils libxslt libxslt-static libsodium libsodium-static zlib libassuan libgcrypt libgpg-error youtubedr gnupg gpgme dnsutils debianutils sqlite dirb mlocate tigervnc crunch translate-shell ffsend x11-repo; do
	GOTIT=$(grep -oE $repo $TMPDIR/installed.tmp)
	PKG=$(grep -o $repo $TMPDIR/alltools.tmp)
	if [ ! -z "$PKG" ] && [ -z "$GOTIT" ];then
		printf "$G(_>)─➤$W Installing the repository $repo.\n"
		yes|pkg install $repo
	elif [ ! -z "$PKG" ] && [ ! -z "$GOTIT" ]; then
		continue
	else
		printf "$R(_>)─➤$W The repository $repo is not candidate.\n"
		sleep 1
	fi
done
rm -f $TMPDIR/alltools.tmp $TMPDIR/installed.tmp
printf "$G\n(_>)─➤$W Installing Abhacker repositories."
if [ ! -e $PREFIX/etc/apt/sources.list.d/abhacker.repo.list ];then
	TMPabh=$(mktemp)
	wget -q --tries=20 "${iHDB}/fix-tools/instAbhackerRepo" -O $TMPabh
        chmod +x $TMPabh
fi

#::: UPDATING LOCATE DATA BASE :::#
printf "$G\n(_>)─➤$W Updating data base."
${which} updatedb

printf "$G\n(_>)─➤$W Installing required python modules.\n"
for v in python python2 ; do
	$v -m pip --no-color --quiet --no-cache-dir install --upgrade pip 2>/dev/null
done
for module in trufflehog wheel speedtest-cli scapy wfuzz h8mail objection frida;do
	python -m pip --no-color --quiet --no-cache-dir install $module 
done

#::::::::::Definition of variable TOOLS::::::::::::#
printf "$G\n(_>)─➤ Getting access to external storage...$W"
printf "$Y\n(_>)─➤$W Access..";
sleep 0.5
if [ -w $TOOLS ];then
	printf "$G. DONE||$W\n"
else
	printf "$R. FAIL!!$W\n"
fi
yes|termux-setup-storage

#::::::::::Installation of Ohmyfish::::::::::::#
printf "$G\n(_>)─➤ Installing interactive shell.$W\n"
[[ -d ~/.local/share/omf ]] && rm -rf ~/.local/share/omf
[[ -d ~/.config/omf ]] && rm -rf ~/.config/omf/
git config --global core.autocrlf
printf "$Y\n(_>)─➤ Now you will see a PS1 as '⋊> ~/i-Haklab on master ⨯'\n ╰─➤ when it happen hold on for one minute and then type exit to continue$W\n"
curl -Ls http://get.oh-my.fish | fish
cat <<- CONF >> $PREFIX/etc/fish/config.fish
if status --is-login
bash /data/data/com.termux/files/usr/libexec/banner/wall-banner
end

function on_exit --on-event fish_exit
rm -rf /data/data/com.termux/files/usr/tmp/*
echo 'Have a nice hacking day!!'
sleep 1
end

set fish_theme bobthefish
set -g theme_nerd_fonts yes
set DISPLAY localhost:1
set HOME /data/data/com.termux/files/home
set GOPATH /data/data/com.termux/files/home/go
set GOROOT /data/data/com.termux/files/usr/lib/go
set iHAKLAB /data/data/com.termux/files/usr/share/i-Haklab
set TOOLS $TOOLS
alias LOCALHOST="ifconfig wlan0 | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}' | grep -v 255"
alias serverapache="apachectl"
alias postgresql="pg_ctl -D /data/data/com.termux/files/usr/var/lib/postgresql"
alias traductor="gawk -f (curl -Ls git.io/translate | psub) -- -shell"
CONF
TMP_fish=$(mktemp)
cat <<- CONF > $TMP_fish
#!/bin/env fish
omf install bobthefish
CONF
fish $TMP_fish >/dev/null 2>&1
cat <<- CONF > $PREFIX/etc/bash.bashrc
# Command history tweaks:
# - Append history instead of overwriting
#   when shell exits.
# - When using history substitution, do not
#   exec command immediately.
# - Do not save to history commands starting
#   with space.
# - Do not save duplicated commands.
shopt -s histappend
shopt -s histverify
export HISTCONTROL=ignoreboth
chsh -s fish
# Default command line prompt.
PROMPT_DIRTRIM=2
PS1='\[\e[0;32m\]\w\[\e[0m\] \[\e[0;97m\]\$\[\e[0m\] '

# Handles nonexistent commands.
# If user has entered command which invokes non-available
# utility, command-not-found will give a package suggestions.
if [ -x /data/data/com.termux/files/usr/libexec/termux/command-not-found ]; then
        command_not_found_handle() {
                /data/data/com.termux/files/usr/libexec/termux/command-not-found "$1"
        }
fi
CONF

#::::::::::Insatalling i-Haklab's login::::::::::::#
[[ -e $PREFIX/var/log/login-termux ]] && rm -f $PREFIX/var/log/login-termux
[[ -e $PREFIX/etc/bashito ]] && rm -f $PREFIX/etc/bashito
[[ -e $PREFIX/etc/motd ]] && rm -f $PREFIX/etc/motd
[[ -e $PREFIX/etc/motd.dpkg-old ]] && rm -f $PREFIX/etc/motd.dpkg-old
for i in Quiz Ivam3 Cinderella;do
        [[ -e $PREFIX/libexec/termux/.$i ]] || touch $PREFIX/libexec/termux/.$i
done
[[ -d $PREFIX/libexec/banner ]] || mkdir -p $PREFIX/libexec/banner
wget -q $iHDB/login-files/i-haklab_login -O $PREFIX/var/log/login-termux
wget -q $iHDB/libexec/banner/i-Haklab -O $PREFIX/libexec/banner/login-banner
cat <<- CONF > $PREFIX/libexec/banner/wall-banner
#!/usr/bin/bash
#Banner for i-Haklab created by @Ivam3 on Jan/2019
IFS=$'\n\t'
bash /data/data/com.termux/files/usr/libexec/banner/login-banner
#        i-Haklab by @Ivam3
CONF
chmod 711 $PREFIX/var/log/login-termux
chmod 711 -R $PREFIX/libexec/termux
chmod 711 -R $PREFIX/libexec/banner
chmod +w $PREFIX/libexec/termux/.Ivam3
printf "SXZhbTNieUNpbmRlcmVsbGEK" > $PREFIX/libexec/termux/.Ivam3
chmod -w $PREFIX/libexec/termux/.Ivam3
chmod +w $PREFIX/libexec/termux/.Quiz
printf "VGhlIGFjY2VzcyBrZXkgaXMgSXZhbTNieUNpbmRlcmVsbGEK" > $PREFIX/libexec/termux/.Quiz
chmod -w $PREFIX/libexec/termux/.Quiz
chmod +w $PREFIX/libexec/termux/.Cinderella
printf "SXZhbTNieUNpbmRlcmVsbGEK" > $PREFIX/libexec/termux/.Cinderella
chmod -w $PREFIX/libexec/termux/.Cinderella

#::::::::::Insatalling i-Haklab tools::::::::::::#
printf "$G\n(_>)─➤$W Installing principal external tools."
chmod 750 $iHAKLAB/.set/bin/*
cp $iHAKLAB/.set/bin/* $PREFIX/bin
if ! command -v msfconsole >/dev/null;then
	printf "$G\n(_>)─➤$W Installing metasploit-framework."
	bash $TMPabh --install metasploit ruby=2.7.2 >/dev/null 2>&1
	wget -q $JAVADB/.embed/apk.rb -O $MSFDIR/lib/msf/core/payload/apk.rb
	wget -q $iHDB/.set/bin/IbyC-fixer -O $PREFIX/bin/IbyC-fixer
        chmod +x $PREFIX/bin/IbyC-fixer
	#:::: FIXING BIG DECIMAL ISSUES ::::#
	RUBYv=$(ls $PREFIX/lib/ruby |grep -m 1 '[0-9].[0-9].[0-9]')
        LINUXANDROID=$(find $PREFIX/lib/ruby/$RUBYv -iname "bigdecimal.so"|awk -F "/" '{print $10}')
        yes|apt install -yq patchelf >/dev/null 2>&1
        if [[ -e "$PREFIX/lib/ruby/$RUBYv/$LINUXANDROID/bigdecimal.so" ]];then
		if [[ -n "$(patchelf --print-needed "$PREFIX/lib/ruby/$RUBYv/$LINUXANDROID/bigdecimal/util.so"|grep bigdecimal.so)" ]];then
			exit 0
		fi
	patchelf --add-needed \
		"$PREFIX/lib/ruby/$RUBYv/$LINUXANDROID/bigdecimal.so" \
		"$PREFIX/lib/ruby/$RUBYv/$LINUXANDROID/bigdecimal/util.so"
	fi
	printf "#!/usr/bin/sh
        SCRIPT_NAME=\$(basename \"\$0\")
        METASPLOIT_PATH=\"\${PREFIX}/opt/metasploit-framework\"
        #Fix ruby bigdecimal extensions linking error.
        export LD_PRELOAD=\"$LINUXANDROID:\$LD_PRELOAD\"
        case \"\$SCRIPT_NAME\" in
                msfconsole|msfvenom)
                        exec ruby \"\$METASPLOIT_PATH/\$SCRIPT_NAME\" \"\$@\"
                        ;;
                *)
                        echo \"[!] Unknown Metasploit command '\$SCRIPT_NAME'.\"
                        exit 1
                        ;;
        esac" > $PREFIX/bin/msfconsole
fi

printf "$G\n(_>)─➤$W Installing ngrok.io ngrok-ssh and ngrok-server."
[[ $(command -v ngrok) ]] && mv $(command -v ngrok) $(command -v ngrok).io
bash $TMPabh --install ngrok-server >/dev/null 2>&1
rm $TMPabh

printf "$G\n(_>)─➤$W Installing VIM predictable text."
[[ -d ~/.vim ]] && rm -rf ~/.vim
wget -q --tries=20 ${iHDB}/to-install/iHaklabvim.zip -O $TMPDIR/iHaklabvim.zip
unzip -q $TMPDIR/iHaklabvim.zip -d $TMPDIR
rm -f $TMPDIR/iHaklabvim.zip
mv $TMPDIR/vim ~/.vim
wget -q --tries=20 $iHDB/functions/unset.fish -O  ~/.config/fish/functions/unset.fis

for TOOL in DoS-A-Tool ExiF embed evilurl localtunnel-server desktop-xfce;do
	bash $iHAKLAB/.set/share/install $TOOL
done
[[ -d ~/.vnc ]] || mkdir ~/.vnc
cat <<- CONF > ~/.vnc/xstartup
#!/data/data/com.termux/files/usr/bin/sh
## This file is executed during VNC server
## startup.

# Launch terminal emulator Aterm.
# Requires package 'aterm'.
aterm -geometry 160x48+20+20 -ls &

# Launch Tab Window Manager.
# Requires package 'xorg-twm'.
startxfce4
CONF

#::::::::::Searching for root permissions::::::::::::#
if chk-root;then
	wget -q --tries=20 $iHDB/bin/sudo -O $PREFIX/bin/sudo
        if [[ -e ~/.suroot/.bashrc ]];then
                [[ -O ~/.suroot/.bashrc ]] || sudo chown $USER:$USER -R ~/.suroot/
        else
		[[ -d ~/.suroot ]] || mkdir ~/.suroot
        fi
        cat <<- CONF > ~/.suroot/.bashrc
PS1=\"\[\e[33m\][!] \[\e[31m\]Press\[\e[32m\] Ctrl d\[\e[31m\] to log out\[\e[32m\] ➤ \[\e[m\]\""
export TERM=xterm-256color
export LD_LIBRARY_PATH=/data/data/com.termux/files/usr/lib
export PATH=/data/data/com.termux/files/usr/bin:/data/data/com.termux/files/usr/bin/applets:/system/xbin:/system/bin
HOME=/data/data/com.termux/files/home
fish
#          i-Haklab by @Ivam3
CONF
fi

bash $iHAKLAB/.set/share/review #LOGFILE
printf "$G\n\n
(_>)─➤$W i-Haklab installed !!!$Y\n
(_>)─➤$W Main commands$Y
 ╰────────➤ run:$W i-Haklab -h :───────────:to automate process$Y
 ╰────────➤ run:$W run <name of tool> :────:to execute installed tool$Y
 ╰────────➤ run:$W omf theme :─────────────:to change a theme$Y
 ╰────────➤ run:$W lock :──────────────────:to block screen$Y
 ╰────────➤ run:$W IbyC-fixer :────────────:to fix termux's issues$Y
 ╰────────➤ run:$W LOCALHOST :─────────────:to show local ip$Y
 ╰────────➤ run:$W serverphp :─────────────:to start php server$Y
 ╰────────➤ run:$W traductor :─────────────:to init a translate shell$Y
 ╰────────➤ run:$W serverapache :──────────:to start apache server$Y
 ╰────────➤ run:$W torvpn :────────────────:to use a proxy connection$Y
 ╰────────➤ run:$W postgresql start :──────:to start postgresql data base$Y
 ╰────────➤ run:$W vncserver :─────────────:to init graphical enviroment on vnc app$Y
 ╰────────➤ run:$W sudo <some commands> :──:to run commands as fake root user$Y
 ╰────────➤ run:$W i-Haklab about i-Haklab :for all usage guide$G
(_>)─➤$W To fix issues going to$B t.me/Ivam3_Bot$G
(_>)─➤$W press$G enter$W to start\n"
read enter;exec login
#		i-Haklab by @Ivam3
