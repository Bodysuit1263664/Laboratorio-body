#!/bin/env bash
#This script will install i-Haklab v.1.5 2020 by Ivam3 - It is a hacking laboratory that contains open source tools recommended by Ivam3.
IFS=$'\n\t'
trap ctrl_c 2
PARTITION=$(echo "$PWD" | grep -o sdext2)
ctrl_c(){ printf "$Y\n\n   [¿] Need a help [?]$B\nTelegram : t.me/Ivam3_Bot$W\n\n";}

while [ ! $(id -u) -ne 0 ]; do
	printf "$R\n[W]:-> You need to be a common user to install i-Haklab$W\n"
	exit
done
if [ -d /data/data/com.termux/files/home/i-Haklab ]; then
        iHAKLAB=/data/data/com.termux/files/home/i-Haklab
elif [ -d /data/data/com.termux/files/home/storage/external-1/roothome/i-Haklab ]; then
        iHAKLAB=/data/data/com.termux/files/home/storage/external-1/roothome/i-Haklab
else
	git clone https://github.com/ivam3/i-Haklab.git $HOME/i-Haklab
	iHAKLAB=/data/data/com.termux/files/home/i-Haklab
fi

source $iHAKLAB/.set/libexec/colors
source $iHAKLAB/.set/var/variables
source $iHAKLAB/.set/functions/functions

banner
#:::::::::: Set colors :::::::::::#
command -v curl >/dev/null || pkg install curl -y >/dev/null 2>&1
curl -Ls https://raw.githubusercontent.com/ivam3/i-Haklab/master/.set/libexec/colors -o /data/data/com.termux/files/usr/libexec/colors

#::::::::::Installation of dependencies::::::::::::#
yes|pkg update && pkg upgrade
for repo in fish root-repo unstable-repo fortune util-linux coreutils vim python python2 ruby perl clang curl wget make openssl openssl-tool php zip unzip tar w3m neofetch weechat irssi tor torsocks proxychains-ng htop bison megatools findutils git apr apr-util openssh apache2 mariadb php-apache pkg-config termux-api termux-tools termux-tools ncurses-utils ncurses postgresql termux-elf-cleaner cmatrix figlet man termux-api hydra axel fortune apksigner autoconf libffi libgmp libpcap readline libsqlite libgrpc libiconv libcaca libtool libmpc libmpc-static libmpfr libmpfr-static libxml2 libxml2-static libxml2-utils libxslt libxslt-static libsodium libsodium-static zlib libassuan libgcrypt libgpg-error gnupg gpgme dnsutils debianutils sqlite dirb mlocate sqlmap crunch translate-shell; do
        GOTIT=$(pkg list-installed | grep -oE $repo)
        PKG=$(pkg list-all|grep -o $repo)
        if [ ! -z "$PKG" ] && [ -z "$GOTIT" ];then
                printf "$G\n[+]─➤$W Installing the repository $repo $W\n"
                yes|pkg install $repo >/dev/null 2>&1
        elif [ ! -z "$PKG" ] && [ ! -z "$GOTIT" ]; then
                continue
        else
                printf "$R\n[w]─➤$W The repository $repo is not candidate$W\n"
                sleep 1
        fi
done
updatedb
for v in python python2 ; do
        $v -m pip --no-color install --upgrade pip
done

for module in trufflehog wheel speedtest-cli scapy wfuzz h8mail ; do
        for v in python python2 ; do
                $v -m pip --no-color install $module
        done
done

#::::::::::Searching for root permissions::::::::::::#
CHECKROOT=$(bash $iHAKLAB/.set/to-install/check-root)
USR=$(whoami)
	if [ $CHECKROOT = "root" ]; then
	command -v sudo > /dev/null || bash $iHAKLAB/.set/to-install/instasudo
        if [ -e /data/data/com.termux/files/home/.suroot/.bashrc ]; then
                if [ ! -O /data/data/com.termux/files/home/.suroot/.bashrc ]; then
                                sudo chown $USR:$USR -R /data/data/com.termux/files/home/.suroot/
                fi
	else
		if [ ! -d /data/data/com.termux/files/home/.suroot ]; then
			mkdir /data/data/com.termux/files/home/.suroot
		fi
        fi
        echo "PS1=\"\[\e[33m\][!] \[\e[31m\]Press\[\e[32m\] Ctrl d\[\e[31m\] to log out\[\e[32m\] ➤ \[\e[m\]\"" > /data/data/com.termux/files/home/.suroot/.bashrc
        echo "export TERM=xterm-256color" >> /data/data/com.termux/files/home/.suroot/.bashrc
        echo "export LD_LIBRARY_PATH=/data/data/com.termux/files/usr/lib" >> /data/data/com.termux/files/home/.suroot/.bashrc
        echo "export PATH=/data/data/com.termux/files/usr/bin:/data/data/com.termux/files/usr/bin/applets:/system/xbin:/system/bin" >> /data/data/com.termux/files/home/.suroot/.bashrc
        echo "HOME=/data/data/com.termux/files/home" >> /data/data/com.termux/files/home/.suroot/.bashrc
	echo "fish" >> /data/data/com.termux/files/home/.suroot/.bashrc
        echo "#          i-Haklab by @Ivam3" >> /data/data/com.termux/files/home/.suroot/.bashrc
fi

#::::::::::Installation of Ohmyfish::::::::::::#
pkg install fish -y
curl -L http://get.oh-my.fish | fish
echo "#Put system-wide fish configuration entries here" > $PREFIX/etc/fish/config.fish
echo "# or in .fish files in conf.d/" >> $PREFIX/etc/fish/config.fish
echo "# Files in conf.d can be overridden by the user" >> $PREFIX/etc/fish/config.fish
echo "# by files with the same name in /fish/conf.d" >> $PREFIX/etc/fish/config.fish
echo "# This file is run by all fish instances." >> $PREFIX/etc/fish/config.fish
echo "# To include configuration only for interactive shells, use" >> $PREFIX/etc/fish/config.fish
echo "# if status --is-interactive" >> $PREFIX/etc/fish/config.fish
echo "#   ..." >> $PREFIX/etc/fish/config.fish
echo "# end" >> $PREFIX/etc/fish/config.fish
echo ""
echo "function __fish_command_not_found_handler --on-event fish_command_not_found" >> $PREFIX/etc/fish/config.fish
echo "         /data/data/com.termux/files/usr/libexec/termux/command-not-found [1]" >> $PREFIX/etc/fish/config.fish
echo "end" >> $PREFIX/etc/fish/config.fish
echo "if status --is-login" >> $PREFIX/etc/fish/config.fish
echo "bash /data/data/com.termux/files/usr/var/log/login-termux" >> $PREFIX/etc/fish/config.fish
echo "end" >> $PREFIX/etc/fish/config.fish
echo "" >> $PREFIX/etc/fish/config.fish
echo "function on_exit --on-event fish_exit" >> $PREFIX/etc/fish/config.fish
echo "echo 'Have a nice hacking day!!'" >> $PREFIX/etc/fish/config.fish
echo "sleep 1" >> $PREFIX/etc/fish/config.fish
echo "end" >> $PREFIX/etc/fish/config.fish
echo "" >> $PREFIX/etc/fish/config.fish
echo "set fish_theme bobthefish" >> $PREFIX/etc/fish/config.fish
echo "set HOME /data/data/com.termux/files/home" >> $PREFIX/etc/fish/config.fish
echo "set GOPATH /data/data/com.termux/files/home/go" >> $PREFIX/etc/fish/config.fish
echo "alias LOCALHOST=\"ifconfig wlan0 | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}' | grep -v 255\"" >> $PREFIX/etc/fish/config.fish
echo "alias postgresql=\"pg_ctl -D /data/data/com.termux/files/usr/var/lib/postgresql\"" >> $PREFIX/etc/fish/config.fish
echo "" >> $PREFIX/etc/fish/config.fish
sed -i "18a set iHAKLAB $iHAKLAB" $PREFIX/etc/fish/config.fish
bash $iHAKLAB/.set/to-install/functions
bash $iHAKLAB/.set/to-install/i-Haklab_login

TARGET=$(ls $iHAKLAB/.set/bin)
for exe in ${TARGET[*]}; do
	curl https://raw.githubusercontent.com/ivam3/i-Haklab/master/.set/bin/$exe -o $PREFIX/bin/$exe
	chmod +x $PREFIX/bin/$exe
done

#::::::::::Installation double check::::::::::::#
if [ -d /data/data/com.termux/files/home/i-Haklab ] && [ -d /data/data/com.termux/files/home/storage/external-1/roothome/i-haklab ]; then
	rm -rf /data/data/com.termux/files/home/i-Haklab
fi
THEME=$(mktemp)
echo "#!/bin/env fish" >> $THEME
echo "#" >> $THEME
echo "omf install bobthefish" >> $THEME
fish $THEME >/dev/null 2>&1
rm $THEME
bash $iHAKLAB/.set/libexec/review

printf "$Y\n\n[!]->$G i-Haklab installed !!!$Y |$W Please restart Termux and enjoy it!!\n\n"

#		@Ivam3
