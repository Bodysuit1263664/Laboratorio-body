#!/data/data/com.termux/files/usr/bin/bash
#This script will install i-Haklab v.3.0 2021 by Ivam3 - It is a hacking laboratory that contains open source tools recommended by Ivam3.
IFS=$'\n\t'
trap ctrl_c 2
ctrl_c() { printf "$Y\n\n   [¿] Need a help [?]$B\nTelegram : t.me/Ivam3_Bot$W\n\n";}

printf "Running..."
[[ -d $PREFIX/share/i-Haklab ]]	|| cp -r $PWD/../i-Haklab $PREFIX/share/
source $PREFIX/share/i-Haklab/.set/var/variables
source $iHAKLAB/.set/functions/functions
chk-Cuser
clear;banner;sleep 3
${which} mkdir -p ~/.termux && echo "extra-keys = [['ESC','/','-','HOME','UP','END','PGUP'],['TAB','CTRL','ALT','LEFT','DOWN','RIGHT','PGDN']]" > ~/.termux/termux.properties && echo "$rst"

if [ -d ~/.local ]; then
	rm -rf ~/.local
fi
if [ -d ~/.config ]; then
	rm -rf ~/.config
fi
if command -v fish >/dev/null;then yes|apt remove fish && apt autoremove; fi

printf "$Y\n(_>)─➤$W Head to app configuration and provides storage permissions to termux.$Y\n ╰─➤$W when finished$G press enter\n$W"
read enter

#::::::::::Installation of dependencies::::::::::::#
printf "$G(_>)─➤$W Upgrading and installing Termux packages.\n"
yes|pkg update && pkg upgrade
for repo in fish root-repo unstable-repo fortune util-linux coreutils vim python python2 ruby perl clang curl wget gawk make openssl openssl-tool php zip unzip tar w3m neofetch weechat irssi tor torsocks proxychains-ng htop bison megatools findutils git apr apr-util openssh apache2 mariadb php-apache pkg-config termux-api termux-tools termux-tools ncurses-utils ncurses postgresql termux-elf-cleaner cmatrix figlet man termux-api axel fortune apksigner autoconf libffi libgmp libpcap readline libsqlite libgrpc libiconv libcaca libtool libmpc libmpc-static libmpfr libmpfr-static libxml2 libxml2-static libxml2-utils libxslt libxslt-static libsodium libsodium-static zlib libassuan libgcrypt libgpg-error youtubedr gnupg gpgme dnsutils debianutils sqlite dirb mlocate sqlmap crunch translate-shell ffsend x11-repo; do
	GOTIT=$(pkg list-installed | grep -oE $repo)
	PKG=$(pkg list-all|grep -o $repo)
	if [ ! -z "$PKG" ] && [ -z "$GOTIT" ];then
		printf "$G(_>)─➤$W Installing the repository $repo.\n"
		yes|pkg install $repo
	elif [ ! -z "$PKG" ] && [ ! -z "$GOTIT" ]; then
		continue
	else
		printf "$R(_>)─➤$W The repository $repo is not candidate.\n"
		sleep 1
	fi
done
printf "$G\n(_>)─➤$W Installing Abhacker repositories."
if [ ! -e $PREFIX/etc/apt/sources.list.d/abhacker.repo.list ];then
	TMPabh=$(mktemp)
	wget -q --tries=20 "${iHDB}/fix-tools/instAbhackerRepo" -O $TMPabh
        chmod +x $TMPabh
fi

#::: UPDATING LOCATE DATA BASE :::#
printf "$G\n(_>)─➤$W Updating data base."
${which} updatedb
printf "$G. DONE$W"

printf "$G\n(_>)─➤$W Installing required python modules.\n"
for v in python python2 ; do
	$v -m pip --no-color --quiet --no-cache-dir install --upgrade pip
done
for module in trufflehog wheel speedtest-cli scapy wfuzz h8mail objection frida; do
        for v in python python2 ; do
		$v -m pip --no-color --quiet --no-cache-dir install $module 
	done
done

#::::::::::Definition of variable TOOLS::::::::::::#
printf "$G\n(_>)─➤ Getting access to external storage...$W"
yes|termux-setup-storage 2>/dev/null
printf "$Y\n(_>)─➤$W Access..\n";
sleep 0.5
if [ -w $TOOLS ];then
	printf "$G. DONE||$W\n"
else
	printf "$R. FAIL!!$W\n"
fi

#::::::::::Installation of Ohmyfish::::::::::::#
printf "$G\n(_>)─➤ Installing interactive shell.$W\n"
[[ -d ~/.local/share/omf ]] && rm -rf ~/.local/share/omf
[[ -d ~/.config/omf ]] && rm -rf ~/.config/omf/
git config --global core.autocrlf
curl -Ls http://get.oh-my.fish | fish
cat <<- CONF >> $PREFIX/etc/fish/config.fish
if status --is-login
bash /data/data/com.termux/files/usr/var/log/login-termux
end

function on_exit --on-event fish_exit
rm -rf /data/data/com.termux/files/usr/tmp/*
echo 'Have a nice hacking day!!'
sleep 1
end

set fish_theme bobthefish
set HOME /data/data/com.termux/files/home
set GOPATH /data/data/com.termux/files/home/go
set GOROOT /data/data/com.termux/files/usr/lib/go
set iHAKLAB /data/data/com.termux/files/usr/share/i-Haklab
alias LOCALHOST="ifconfig wlan0 | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}' | grep -v 255"
alias serverapache="apachectl"
alias postgresql="pg_ctl -D /data/data/com.termux/files/usr/var/lib/postgresql"
alias traductor="gawk -f (curl -Ls git.io/translate | psub) -- -shell"
CONF
TMP_fish=$(mktemp)
cat <<- CONF > $TMP_fish
#!/bin/env fish
omf install bobthefish
CONF
fish $TMP_fish >/dev/null 2>&1
cat <<- CONF > $PREFIX/etc/bash.bashrc
# Command history tweaks:
# - Append history instead of overwriting
#   when shell exits.
# - When using history substitution, do not
#   exec command immediately.
# - Do not save to history commands starting
#   with space.
# - Do not save duplicated commands.
shopt -s histappend
shopt -s histverify
export HISTCONTROL=ignoreboth
chsh -s fish
# Default command line prompt.
PROMPT_DIRTRIM=2
PS1='\[\e[0;32m\]\w\[\e[0m\] \[\e[0;97m\]\$\[\e[0m\] '

# Handles nonexistent commands.
# If user has entered command which invokes non-available
# utility, command-not-found will give a package suggestions.
if [ -x /data/data/com.termux/files/usr/libexec/termux/command-not-found ]; then
        command_not_found_handle() {
                /data/data/com.termux/files/usr/libexec/termux/command-not-found "$1"
        }
fi
CONF

printf "$G\n(_>)─➤ Installing VIM predictable text..$W";
if [ -d ~/.vim ];then
	rm -rf ~/.vim
fi
wget -q --tries=20 ${iHDB}/to-install/iHaklabvim.zip -O $TMPDIR/iHaklabvim.zip
if [ -e $TMPDIR/iHaklabvim.zip ]; then
	unzip -q $TMPDIR/iHaklabvim.zip -d $TMPDIR
	rm -f $TMPDIR/iHaklabvim.zip
	mv $TMPDIR/vim ~/.vim
	printf "$G. DONE!!$W\n"
else
	printf "$R. FAIL!!$W\n"
fi
#wget -q --tries=20 $iHDB/functions/unset.fish -O  ~/.config/fish/functions/unset.fish
bash $iHAKLAB/.set/to-install/i-Haklab_login

#::::::::::Insatalling i-Haklab tools::::::::::::#
printf "$G\n(_>)─➤$W Installing principal external tools."
sleep 1
for TOOL in 
	IbyC-fixer converter serverphp DoS-A-Tool ExiF embed binchecker blackbox crunch vpn evilurl localtunnel-server pagekite lock;do
	bash $iHAKLAB/.set/share/install $TOOL
done
if ! command -v msfconsole;then
printf "$G\n(_>)─➤$W Installing metasploit-framework."
        bash <(curl -fsSL "http://git.io/abhacker-repo") --install metasploit -y
fi
printf "$G\n(_>)─➤$W Downgrading ruby version..";
        exec $TMPabh --install "ruby=2.7.2" >/dev/null 2>&1
printf "$G. DONE!!$W\n"
printf "$G\n(_>)─➤$W Installing ngrok..";
[[ $(command -v ngrok) ]] && mv $(command -v ngrok) $(command -v ngrok).io
	exec $TMPabh --install ngrok-server >/dev/null 2>&1
printf "$G. DONE!!$W\n"
        rm $TMPabh
printf "$G\n(_>)─➤$W Downloading brute force wordlist$G\n  ╰───────────➤$W it could take a while..";
git clone --quiet https://github.com/jeanphorn/wordlist $iHAKLAB/wordlist
wget -q --tries=20 https://www.scrapmaker.com/data/wordlists/dictionaries/rockyou.txt -O $iHAKLAB/wordlist/rockyou.txt
printf "$G. DONE!!$W\n"

#::::::::::Searching for root permissions::::::::::::#
if chk-root;then
	wget -q --tries=20 $iHDB/bin/sudo -O $PREFIX/bin/sudo
        if [[ -e ~/.suroot/.bashrc ]];then
                [[ -O ~/.suroot/.bashrc ]] || sudo chown $USER:$USER -R ~/.suroot/
        else
		[[ -d ~/.suroot ]] || mkdir ~/.suroot
        fi
        cat <<- CONF > ~/.suroot/.bashrc
PS1=\"\[\e[33m\][!] \[\e[31m\]Press\[\e[32m\] Ctrl d\[\e[31m\] to log out\[\e[32m\] ➤ \[\e[m\]\""
export TERM=xterm-256color
export LD_LIBRARY_PATH=/data/data/com.termux/files/usr/lib
export PATH=/data/data/com.termux/files/usr/bin:/data/data/com.termux/files/usr/bin/applets:/system/xbin:/system/bin
HOME=/data/data/com.termux/files/home
fish
#          i-Haklab by @Ivam3
CONF
fi

[[ $PWD != $iHAKLAB ]] && rm -rf $PWD
bash $iHAKLAB/.set/share/review #LOGFILE

printf "$Y\n\n(_>)─➤$G i-Haklab installed !!!$Y |$W Please restart Termux and enjoy it!!\n\tTo fix issues going to$B t.me/Ivam3_Bot$W\n\n"
#		i-Haklab by @Ivam3
