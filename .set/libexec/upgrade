#!/data/data/com.termux/files/usr/bin/bash
#
#i-Haklab v.2.0 2020 by Ivam3 - Is a hacking laboratory that contains open source tools recommended by Ivam3. Please do not use in military or secret service organizations, or for illegal purposes
#
#Created on Jan/2019 
#Modify: 2021-03-25
####################

IFS=$'\n\t'
trap ctrl_c 2
if [ ! -e /data/data/com.termux/files/usr/libexec/colors ]; then
	wget https://raw.githubusercontent.com/ivam3/i-Haklab/master/.set/libexec/colors -O $PREFIX/libexec/colors > /dev/null 2>&1
fi
source /data/data/com.termux/files/usr/libexec/colors

ctrl_c() {
                echo
                printf "$Y\n\n[!]$R Going me on$B Telegram$R t.me/Ivam3byCinderella$W\n\n"
}
if [ -L ~/storage/external-1 ]; then
	iHAKLAB=/data/data/com.termux/files/home/storage/external-1/roothome/i-Haklab
else
        iHAKLAB=/data/data/com.termux/files/home/i-Haklab
fi
while [ ! $(id -u) -ne 0 ]; do
	printf "$R\n[W]:-> You need to be a common user$W\n"
	exit
done
until [ -d $iHAKLAB ]; do
	printf "$R\n[W]:-> i-Haklab needed$W |$Y Do you wanna install it?$W\n"
	while read -p "       [yes/no]:-> " yesorno && [ -z $yesorno ]; do
		continue
	done
if [ $yesorno = "yes" ] || [ $yesorno = "Yes" ] || [ $yesorno = "YES" ]; then
	git clone https://github.com/ivam3/i-Haklab.git $HOME/i-Haklab
        cd ~/i-Haklab;chmod 711 *;bash setup-lite
else 
	printf "$G\n[!]-> Have a nice hacking day!!\n\n"
	exit
fi
done
#TRASH
printf "$Y[-]-> Dropping the trash\n$W"
sleep 0.5
for del in DoS-A-Tool Ivam3 RuGiR;do
	if [ -e $PREFIX/bin/$del ];then
		rm -rf $PREFIX/bin/$del
	fi
done

#UPGRADE VIM
if [ -d ~/.vim ];then
        rm -rf ~/.vim
fi
exec unzip $iHAKLAB/.set/to-install/iHaklabvim.zip
mv ~/vim ~/.vim

#UPGRADE OMF
printf "$Y[!]-> Upgrading i-Haklab shell\n"
sleep 0.5
omf update omf > /dev/null 2>&1

#FIX SOME BUGS
printf "$Y[!]-> Re-configurating. . .$W\n"
sleep 0.5

wget https://raw.githubusercontent.com/ivam3/i-Haklab/master/.set/login-files/i-haklab_login -O $PREFIX/var/log/login-termux -q
wget https://raw.githubusercontent.com/ivam3/i-Haklab/master/.set/libexec/banner/i-Haklab -O $PREFIX/libexec/banner/login-banner -q

if [ -e $PREFIX/etc/fish/config.fish ]; then
	echo "# Put system-wide fish configuration entries here" > $PREFIX/etc/fish/config.fish
	echo "# or in .fish files in conf.d/" >> $PREFIX/etc/fish/config.fish
	echo "# Files in conf.d can be overridden by the user" >> $PREFIX/etc/fish/config.fish
	echo "# by files with the same name in $XDG_CONFIG_HOME/fish/conf.d" >> $PREFIX/etc/fish/config.fish
	echo "" >> $PREFIX/etc/fish/config.fish
	echo "# This file is run by all fish instances." >> $PREFIX/etc/fish/config.fish
	echo "# To include configuration only for login shells, use" >> $PREFIX/etc/fish/config.fish
	echo "# if status --is-login" >> $PREFIX/etc/fish/config.fish
	echo "#    ..." >> $PREFIX/etc/fish/config.fish
	echo "# end" >> $PREFIX/etc/fish/config.fish
	echo "# To include configuration only for interactive shells, use" >> $PREFIX/etc/fish/config.fish
	echo "# if status --is-interactive" >> $PREFIX/etc/fish/config.fish
	echo "#   ..." >> $PREFIX/etc/fish/config.fish
	echo "# end" >> $PREFIX/etc/fish/config.fish
	echo "" >> $PREFIX/etc/fish/config.fish
	echo "function __fish_command_not_found_handler --on-event fish_command_not_found" >> $PREFIX/etc/fish/config.fish
	echo "        /data/data/com.termux/files/usr/libexec/termux/command-not-found $argv[1]" >> $PREFIX/etc/fish/config.fish
	echo "end" >> $PREFIX/etc/fish/config.fish
	echo "if status --is-login" >> $PREFIX/etc/fish/config.fish
	echo "bash /data/data/com.termux/files/usr/var/log/login-termux" >> $PREFIX/etc/fish/config.fish
	echo "end" >> $PREFIX/etc/fish/config.fish
	echo "" >> $PREFIX/etc/fish/config.fish
	echo "function on_exit --on-event fish_exit" >> $PREFIX/etc/fish/config.fish
	echo "echo 'Have a nice hacking day!!'" >> $PREFIX/etc/fish/config.fish
	echo "sleep 1" >> $PREFIX/etc/fish/config.fish
	echo "end" >> $PREFIX/etc/fish/config.fish
	echo "" >> $PREFIX/etc/fish/config.fish
	echo "set fish_theme bobthefish" >> $PREFIX/etc/fish/config.fish
	echo "set HOME /data/data/com.termux/files/home" >> $PREFIX/etc/fish/config.fish
	echo "set GOPATH /data/data/com.termux/files/home/go" >> $PREFIX/etc/fish/config.fish
	echo "set iHAKLAB $iHAKLAB" >> $PREFIX/etc/fish/config.fish
	echo "alias LOCALHOST=\"ifconfig wlan0 | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}' | grep -v 255\"" >> $PREFIX/etc/fish/config.fish
	echo "alias serverapache=\"apachectl\"" >> $PREFIX/etc/fish/config.fish
	echo "alias postgresql=\"pg_ctl -D /data/data/com.termux/files/usr/var/lib/postgresql\"" >> $PREFIX/etc/fish/config.fish
	echo "alias traductor=\"gawk -f (curl -Ls git.io/translate | psub) -- -shell\"" >> $PREFIX/etc/fish/config.fish
	echo "" >> $PREFIX/etc/fish/config.fish
else
	printf "$R\n[w]-> FATAL ERROR :$W interactive shell not installed$Y\n[!]-> Run$W i-Haklab reinstall$Y to fix it$W"
fi

######### Upgrading executables #########
BINDIR=$(ls $iHAKLAB/.set/bin)
printf "$Y[!]-> Upgrading commands. . .$W\n"
for i in ${BINDIR[*]}; do
	wget -q https://raw.githubusercontent.com/ivam3/i-Haklab/master/.set/bin/$i -O $PREFIX/bin/$i
	chmod +x $PREFIX/bin/$i
done

NO() {
TOFIX=$(ls $iHAKLAB/.set/fix-tools)
printf "$Y[!]-> Fixing executable files. . .$W\n"
sleep 0.5

printf "$G\n\t[i]->$W Already up to date$G <-[i]$W\n\n"
}

THEME=$(mktemp)
echo "#!/bin/env fish" >> $THEME
echo "#" >> $THEME
echo "omf install bobthefish" >> $THEME
fish $THEME > /dev/null 2>&1
rm $THEME

#			@Ivam3
